.TH _PRINTF 3
.SH NAME
_printf \- format and print data
.SH SYNOPSIS
.B #include "holberton.h"

.B int _printf(const char
*format\fB, ...);\fR
.SH DESCRIPTION
The functions in the printf() family produce output according to a format and
output said format to stdout. _printf writes the output under the control of a 
format string that specifies how subsequent argumentsare converted for output.

\fBReturn value\fR

Upon successful return, _printf returns the number of characters printed 
(excluding the null byte used to end output to strings). 

\fBFormat of the format string\fR

The format string is a character string, beginning and ending in its initial 
shift state, if any. The format string is composed of zero or more directives: 
ordinary characters (not \fB%\fR), which are copied unchanged to the output 
stream; and conversion specifications. Each conversion specification is 
introduced by the character \fB%\fR, and ends with a conversion specifier.

\fBThe conversion specifier\fR

A character that specifies the type of conversion to be applied. The conversion 
specifiers and their meanings are: 

.TP
.B c
If no \fBl\fR modifier is present, the int argument is converted to an unsigned 
char, and the resulting character is written.

.TP
.B s
If no l modifier is present: The const char * argument is expected to be a 
pointer to an array of character type (pointer to a string). Characters from 
the array are written up to (but not including) a terminating null byte ('\0')

.TP
.B %
A '%' is written. No argument is converted. The complete conversion 
specification is '%%'. 

.SH SEE ALSO
\fIprintf\fR(1), \fIprintf\fR(3)

.SH AUTHORS
Heindrick Cheung, Cameron Eng